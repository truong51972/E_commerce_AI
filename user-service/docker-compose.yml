services:
  nginx:
    build: 
      context: ./nginx
    container_name: nginx__${SERVICE_NAME}
    restart: always
    depends_on:
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/SSL:/etc/nginx/SSL
      - ./.data/staticfiles:/staticfiles
      - ./.data/media:/media
    networks:
      private-network:
      microservices-network:
        aliases: 
          - nginx__${SERVICE_NAME}


  backend:
    build: 
      context: ./backend 
    container_name: backend__${SERVICE_NAME}
    image: backend__${SERVICE_NAME}
    restart: always
    volumes:
      - ./backend:/app
      - ./.data:/.data
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - USING_REDIS
    depends_on:
      - database
    networks:
      private-network:


  redis:
    image: redis:latest
    container_name: redis__${SERVICE_NAME}
    networks:
      private-network:


  database:
    image: postgres:latest
    container_name: database__${SERVICE_NAME}
    restart: always
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    volumes:
      - ./.data/database:/var/lib/postgresql/data
    networks:
      private-network:


  cloudflare_tunnel:
    build: 
      context: ./cloudflare_tunnel
    container_name: cloudflare_tunnel__${SERVICE_NAME}
    restart: on-failure:5
    environment:
      - TUNNEL_ORIGIN_KEEPALIVE_TIMEOUT=30s
      - TUNNEL_TOKEN
      - NO_AUTOUPDATE
    networks:
      private-network:

networks:
  microservices-network:
    driver: bridge

  private-network:
    driver: bridge
